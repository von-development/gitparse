[project]
name = "gitparse"
version = "0.1.1"
description = "A typed, modular Python library for structured repository parsing"
authors = [
    {name = "Victor von Sohsten", email = "vondevelopment@gmail.com"}
]
requires-python = ">=3.8"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git",
]

[project.urls]
Homepage = "https://github.com/von-development/gitparse"
Repository = "https://github.com/von-development/gitparse.git"
Documentation = "https://github.com/von-development/gitparse#readme"
"Bug Tracker" = "https://github.com/von-development/gitparse/issues"

[project.scripts]
gitparse = "gitparse.cli:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "gitparse"
version = "0.1.1"
description = "A typed, modular Python library for structured repository parsing"
authors = ["Victor von Sohsten <vondevelopment@gmail.com>"]
readme = "README.md"
packages = [{include = "gitparse"}]
repository = "https://github.com/von-development/gitparse"
documentation = "https://github.com/von-development/gitparse#readme"
keywords = ["git", "repository", "parser", "analysis", "metadata"]

[tool.poetry.dependencies]
python = "^3.8"
gitpython = "^3.1.0"
pydantic = "^2.0.0"
python-magic = "^0.4.0"
typing-extensions = "^4.0.0"
tomli = "^2.0.0"
packaging = "^23.0"
colorama = "^0.4.0"
aiofiles = "^24.0.0"
rich = "^13.7.0"

[tool.poetry.group.windows.dependencies]
python-magic-bin = { version = "^0.4.0", platform = "win32" }

[tool.poetry.group.unix.dependencies]
# For Unix systems, libmagic is usually installed via the system package manager
# e.g., apt-get install libmagic1 or yum install file-libs

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
black = "^23.7.0"
ruff = "^0.1.0"

[tool.ruff]
line-length = 130
target-version = "py38"

# Exclude files and directories from ruff checks
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "examples",
    "*.pyc",
    "*.egg-info",
]

[tool.ruff.lint]
# Enable all rules by default
select = ["ALL"]
# Ignore specific rules
ignore = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "B",  # flake8-bugbear
    "UP", # pyupgrade
    "D",  # pydocstyle
    "ANN", # flake8-annotations
]

[tool.black]
line-length = 100
target-version = ["py38"]
# Exclude files and directories from black formatting
exclude = '''
(
    \.git
    | \.venv
    | build
    | dist
    | examples
    | \.eggs
    | \.mypy_cache
    | \.pytest_cache
    | \.ruff_cache
    | \.tox
)
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
# Exclude files and directories from mypy checks
exclude = [
    "examples/",
    "build/",
    "dist/",
    "tests/",
]

